Class TheMightyDoot : Weapon replaces BFG9000
{
private int dootmode;
private int lit;
private float bluepitch;
private int bpitch;
private int greensnd;
override void PostBeginPlay() {
	super.PostBeginPlay();
	dootmode = 2;
	}
override void DoEffect() {
	super.DoEffect();
	if (!owner) 
		return;
	
	if (owner.player.readyweapon != self) {
		owner.deathsound = owner.default.deathsound;
		return;
		}
	owner.deathsound = "doot/death";
	
	let psp = owner.player.FindPSprite(PSP_weapon);		
	if (!psp) {
		owner.player.setPSprite(10,null);
		owner.player.setPSprite(11,null);
		owner.player.setPSprite(12,null);
		return;
		}	
	
	let rred = owner.player.FindPSprite(12);
	let rblue = owner.player.FindPSprite(11);
	let rgreen = owner.player.FindPSprite(10);
	
	if (!rgreen && dootmode == 0)	
		owner.player.setPSprite(10,FindState("LightGreen"));
	else if (rgreen && dootmode != 0)
		owner.player.setPSprite(10,null);
	
	if (!rblue && dootmode == 1)	
		owner.player.setPSprite(11,FindState("LightBlue"));
	else if (rblue && dootmode != 1)		
		owner.player.setPSprite(11,null);
		
	if (!rred && dootmode == 2)	
		owner.player.setPSprite(12,FindState("LightRed"));
	else if (rred && dootmode != 2)
		owner.player.setPSprite(12,null);
	
	
	//console.printf("red: %d, blue: %d, green: %d", dootred,dootblue,dootgreen);
	}
	
Default {
	+WEAPON.NOAUTOFIRE
	+WEAPON.ALT_AMMO_OPTIONAL
	Inventory.PickupMessage "Prepate to Doot!";
	Tag "The Mighty Doot";
	Weapon.AmmoType "Cell";
	Weapon.AmmoGive 100;
	Weapon.AmmoUse 1;
	Weapon.AmmoGive 300;
	Weapon.SlotNumber 7;
	scale 0.5;
	Weapon.BobRangeX 0.4;
	Weapon.BobRangeY 0.35;
	Weapon.BobSpeed 2;
	weapon.bobStyle "InverseSmooth";
	inventory.pickupsound "doot/pickup";
	+FLOATBOB
	floatbobstrength 0.5;
	}
states
	{
	Spawn:
		DOOT Z -1 bright NoDelay A_playsound("doot/rickroll",looping:true);
		stop;
	Select:
		DOOT A 1 A_Raise(10);
		loop;
	Deselect:
		DOOT A 1 A_Lower(10);
		loop;
	Ready:
		DOOT A 1 A_WeaponReady;
		loop;
	LightRed:
		DLIR ABCB 3 bright;
		loop;
	LightGreen:
		DLIG ABCB 3 bright;
		loop;
	LightBlue:
		DLIB ABCB 3 bright;
		loop;
	Fire:
		TNT1 A 0 {
			if (invoker.dootmode == 0)
				return ResolveState("FireGreen");
			else if (invoker.dootmode == 1)
				return ResolveState("FireBlue");
			else if (invoker.dootmode == 2)
				return ResolveState("FireRed");
			return ResolveState(null);
			}
	FireGreen:
		DOOT A 4 A_PlaySound("doot/themestart");
	FireGreenHold:
		DOOT A 3 {			
			invoker.lit++;
			if (invoker.lit > 6 || invoker.lit < 1)	invoker.lit = 1;
			//console.printf("doot: %d", invoker.lit);
			if (invoker.lit == 1)		A_PlaySound("doot/theme1"); //A_FireProjectile("MusicNoteGreen1",0,true); //A_PlaySound("doot/lit1");
			else if (invoker.lit == 2)	A_PlaySound("doot/theme2"); //A_FireProjectile("MusicNoteGreen2",0,true); //A_PlaySound("doot/lit2");
			else if (invoker.lit == 3)	A_PlaySound("doot/theme3"); //A_FireProjectile("MusicNoteGreen3",0,true); //A_PlaySound("doot/lit3");
			else if (invoker.lit == 4)	A_PlaySound("doot/theme4"); //A_FireProjectile("MusicNoteGreen4",0,true); //A_PlaySound("doot/lit4");
			else if (invoker.lit == 5)	A_PlaySound("doot/theme5"); //A_FireProjectile("MusicNoteGreen4",0,true); //A_PlaySound("doot/lit4");
			else if (invoker.lit == 6)	A_PlaySound("doot/theme6"); //A_FireProjectile("MusicNoteGreen4",0,true); //A_PlaySound("doot/lit4");
			A_Overlay(-6,"GreenFlash");
			A_OverlayFlags(-6,PSPF_ADDWEAPON,false);
			A_FireProjectile("MusicNoteGreen",0,true);
			}
		DOOT AA 1 A_Weaponoffset(0.8,0.8,WOF_ADD);
		DOOT A 1;
		DOOT AAAA 1 A_Weaponoffset(-0.4,-0.4,WOF_ADD);
		DOOT A 0 A_ReFire("FireGreenHold");
		DOOT A 10 {
			if (invoker.lit == 6) {
				A_PlaySound("doot/themeend1");
				invoker.lit = 0;
				return ResolveState("FireGreenEnd");
				}			
			else if (invoker.lit == 5) {
				A_PlaySound("doot/themeend2");
				A_Overlay(5,"Puff");
				A_OverlayFlags(5,PSPF_ADDWEAPON,false);
				A_OverlayOffset(5,0,32);
				}
			invoker.lit = 0;
			return ResolveState(null);
			}
		goto ready;
	FireGreenEnd:
		DOOT A 7 { invoker.dootmode = 1; }
		DOOT A 7 { invoker.dootmode = 2; }
		DOOT A 7 { invoker.dootmode = 0; }
		goto ready;
	FireBlue:
		DOOT A 3 {
			if (invoker.bpitch == 0 || invoker.bluepitch <= -10)
				invoker.bpitch = 2;
			if (invoker.bluepitch >= 10)
				invoker.bpitch = -2;
			invoker.bluepitch+= invoker.bpitch;
			A_PlaySound("doot/saxloop",7,looping:true);
			A_Overlay(-7,"BlueFlash",true);
			A_OverlayFlags(-7,PSPF_ADDWEAPON,false);
			A_FireProjectile("MusicNoteBlue",0,true,1.2,7,pitch:invoker.bluepitch);
			A_FireProjectile("MusicNoteBlue",-3,false,1.2,7,pitch:invoker.bluepitch);
			A_FireProjectile("MusicNoteBlue",-6,false,1.2,7,pitch:invoker.bluepitch);
			A_FireProjectile("MusicNoteBlue",3,false,1.2,7,pitch:invoker.bluepitch);
			A_FireProjectile("MusicNoteBlue",6,false,1.2,7,pitch:invoker.bluepitch);
			A_WeaponOffset(frandom(-0.5,0.5),32+frandom(0,1));
			}
		TNT1 A 0 A_ReFire("FireBlue");
		DOOT A 8 {
			A_WeaponOffset(0,32);
			A_PlaySound("doot/exhaust",7,volume:0.25);
			A_Overlay(5,"Puff");
			A_OverlayFlags(5,PSPF_ADDWEAPON,false);
			A_OverlayOffset(5,0,32);
			}
		goto ready;
	FireRed:
		DOOT A 3 {
			A_PlaySound("doot/fire/light",5);
			A_Overlay(-5,"RedFlash");
			A_OverlayFlags(-5,PSPF_ADDWEAPON,false);
			for (int i = 10; i > 0; i--)
				A_FireProjectile("MusicNoteRed",frandom(-3,3),true,pitch:frandom(-8,6));
			}
		DOOT AAAA 1 A_Weaponoffset(3,3,WOF_ADD);
		DOOT A 3;
		DOOT AAAAAAAA 1 A_Weaponoffset(-1.5,-1.5,WOF_ADD);
		DOOT A 10 {
			A_Overlay(5,"Puff");
			A_OverlayFlags(5,PSPF_ADDWEAPON,false);
			A_OverlayOffset(5,0,32);
			}
		goto ready;
	Puff:
		DSMK ABCDEFGHI 2;
		stop;
	RedFlash:
		TNT1 A 0 A_OverlayOffset(-5,0,32);
		DOSR ABCDEFGHI 2 bright A_OverlayOffset(-5,-1,-1,WOF_ADD);
		stop;
	GreenFlash:
		TNT1 A 0 A_OverlayOffset(-6,0,32);
		DOSG ABCDEFGHI 1 bright A_OverlayOffset(-6,-1,-1,WOF_ADD);
		stop;
	BlueFlash:
		TNT1 A 0 A_OverlayOffset(-7,0,32);
		DOSB ABCDEFGHI 2 bright A_OverlayOffset(-7,-1,-1,WOF_ADD);
		stop;
	AltFire:
		DOOT A 5 {
			invoker.dootmode++;
			if (invoker.dootmode > 2 || invoker.dootmode < 0)
				invoker.dootmode = 0;
			if (invoker.dootmode == 0)
				A_PlaySound("doot/switch2");
			else if (invoker.dootmode == 1)
				A_PlaySound("doot/switch3");
			else if (invoker.dootmode == 2) 
				A_PlaySound("doot/switch1");
			}
		goto ready;
	}
}

Class MusicNoteRed : Actor
{
double broll;
Default {
	+ROLLSPRITE;
	+ROLLCENTER;
	PROJECTILE;
	+RIPPER;
	radius 12;
	height 8;
	speed 40;
	-NOGRAVITY;
	gravity 0.8;
	damage 1;
	+BRIGHT;
	bouncetype "Doom";
	renderstyle "Translucent";
	alpha 0.9;
	scale 0.1;
	bouncesound "doot/notebounce";
	translation "0:255=@100[255,0,0]";
	}
override void PostBeginPlay() {
	super.PostBeginPlay();
	broll = frandom(5,12)*randompick(-1,1);
	}
states
	{
	Spawn:
		DNOT AB 0;
		DNOT A 0 { 
			frame = random(0,1); 
			}
		DNOT # 1 { 
			scale*= 0.99; 
			roll+=broll;
			}
		wait;
	}
}

Class MusicNoteGreen : MusicNoteRed
{
Default {
	-RIPPER;
	speed 50;
	+NOGRAVITY;
	damage 8	;
	radius 3;
	height 3;
	bouncetype "Hexen";
	bouncecount 3;
	bouncesound "doot/litbounce";
	deathsound "";
	translation "0:255=@100[0,255,0]";
	}
states
	{
	Spawn:
		DNOT A 0 NoDelay { 
			frame = random(0,1); 
			}
		DNOT # 1 {
			A_spawnItemEx("MusicNoteGreenTrail",flags:SXF_SETMASTER|SXF_ORIGINATOR);
			roll+=5; 
			}
		wait;
	Death:
		TNT1 A 1 {
			for (int i = random(8,14); i > 0; i --)
				A_SpawnParticle("00FF00",SPF_FULLBRIGHT,50,size:3,velx:frandom(-2,2),vely:frandom(-2,2),velz:frandom(-2,2));
			}
		stop;
	}
}

Class MusicNoteGreenTrail : MusicNoteGreen
{
Default {
	+NOINTERACTION
	-MISSILE
	}
override void PostBeginPlay () {
	super.PostBeginPlay();
	if (master) {
		roll = master.roll;
		frame = master.frame; 
		}
	}
states
	{
	Spawn:
		DNOT # 1 { 
			roll+=5;
			A_FadeOut(0.05);
			scale*=0.9;
			}
		wait;
	}
}
	
	
Class MusicNoteBlue : MusicNoteGreen
{
Default {
	speed 16;
	+NOGRAVITY;
	damage 1;
	translation "0:255=@100[0,0,255]";
	scale 0.03;
	deathsound "";
	bouncetype "none";
	}
states
	{
	Spawn:
		DNOT AB 0;
		DNOT A 0 { 
			frame = random(0,1); 
			}
		DNOT # 1 { 
			roll-=3; 
			scale*=1.08;
			A_FadeOut(0.05);
			}
		wait;
	Death:
		TNT1 A 1 {
			for (int i = random(4,7); i > 0; i --)
				A_SpawnParticle("0000FF",SPF_FULLBRIGHT,50,size:3,velx:frandom(-1,1),vely:frandom(-1,1),velz:frandom(-1,1));
			}
		stop;
	}
}